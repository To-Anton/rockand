import run_bot
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import batton as kb
import random

bot = Bot(token=run_bot.TOKEN)
dp: Dispatcher = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await bot.send_message(message.from_user.id, "–ü—Ä–∏–≤—ñ—Ç! üëã", reply_markup=kb.greet_kb)


@dp.message_handler(commands=['help'])
async def menu1(message: types.Message):
    await bot.send_message(message.from_user.id, '–î–∞–≤–∞–π –¥–æ–ø–æ–º–æ–∂—É. –û–±–µ—Ä–∏ –æ–¥–∏–Ω –∑ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤', reply_markup=kb.greet_kb3)


@dp.message_handler(text=["‚úä", "‚úå", "‚úã"])
async def process_start1(message: types.Message):
    rand = ["‚úä", "‚úå", "‚úã"]
    rand = random.choice(rand)
    await bot.send_message(message.from_user.id, str(random.choice(rand)))
    if message.text == '‚úä' and rand == '‚úä':
        await bot.send_message(message.from_user.id, '–ù—ñ—á—ñ—è! –©–µ?')
    elif message.text == '‚úä' and rand == '‚úå':
        await bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–º–æ–≥–∞! üëè')
    elif message.text == '‚úä' and rand == '‚úã':
        await bot.send_message(message.from_user.id, '–ü–æ—Ä–∞–∑–∫–∞! üò≤')
    else:
        if message.text == '‚úå' and rand == '‚úä':
            await bot.send_message(message.from_user.id, '–ü—Ä–æ–≥—Ä–∞—à! –©–µ?')
        elif message.text == '‚úå' and rand == '‚úå':
            await bot.send_message(message.from_user.id, '–ù—ñ—á—ñ—è! üò≥')
        elif message.text == '‚úå' and rand == '‚úã':
            await bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–º–æ–≥–∞! –í—ñ—Ç–∞—é!')
        else:
            if message.text == '‚úã' and rand == '‚úä':
                await bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–º–æ–≥–∞! üíôüíõ')

            elif message.text == '‚úã' and rand == '‚úå':
                await bot.send_message(message.from_user.id, '–ü—Ä–æ–≥—Ä–∞—à! –í—ñ–¥—ñ–≥—Ä–∞—î—à—Å—è?')
            elif message.text == '‚úã' and rand == '‚úã':
                await bot.send_message(message.from_user.id, '–ù—ñ—á–∏—è, –¥–∞–≤–∞–π —â–µ!')


@dp.message_handler()
async def menu(message: types.Message):
    if message.text == '‚úä‚úå‚úã':
        await bot.send_message(message.from_user.id, '–î–∞ –ø–æ—á–Ω–µ—Ç—å—Å—è –±–∏—Ç–≤–∞', reply_markup=kb.greet_kb2)  # —Ç—É—Ç –¥–æ–¥–∞—Ç–∏ —Å–∞–º—É
    elif message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó':
        await bot.send_message(message.from_user.id, '–û–±–∏—Ä–∞–π –æ—Å—å —Ç–æ–±—ñ üóù', reply_markup=kb.greet_kb_20)
    elif message.text == '–í—ñ–¥ 0 –¥–æ 100':
        await bot.send_message(message.from_user.id, '–í–∞—à–µ —á–∏—Å–ª–æ: ' + str(random.randint(0, 100)))
    elif message.text == '–í—ñ–¥ 0 –¥–æ 1000':
        await bot.send_message(message.from_user.id, '–í–∞—à–µ —á–∏—Å–ª–æ: ' + str(random.randint(0, 1000)))
    elif message.text == '–ì—Ä–∞–ª—å–Ω–∏–π –∫—É–±–∏–∫ üé≤':
        await bot.send_message(message.from_user.id, '–í–∞—à–µ —á–∏—Å–ª–æ: ' + str(random.randint(1, 6)))
    elif message.text == '–ì—Ä–∞–ª—å–Ω—ñ –∫—É–±–∏–∫–∏ üé≤üé≤':
        await bot.send_message(message.from_user.id, '–í–∞—à–µ —á–∏—Å–ª–æ: ' + str(random.randint(1, 12)))
    elif message.text == '‚¨Ö –ùa–∑–∞–¥':
        await bot.send_message(message.from_user.id, '–•—Ç–æ —à—É–∫–∞—î, —Ç–æ–π –∑–∞–≤–∂–¥–∏ ü¶ù', reply_markup=kb.greet_kb1)
    elif message.text == '–ü—Ä–∏–≤—ñ—Ç! üëã':
        await bot.send_message(message.from_user.id, 'üëã', reply_markup=kb.greet_kb1)
    elif message.text == '–Ø–∫ –≥—Ä–∞—Ç–∏ –≤ —Ü—É-—î-—Ñ–∞?':
        await bot.send_message(message.chat.id, "–õ–æ–≤–∏ —Å–∏–ª–∫—É –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä–∏: "
                                                "https://uk.wikipedia.org/wiki/%D0%9A%D0%B0%D0%BC%D1%96%D0%BD%D1%8C-%D0%BD%D0%BE%D0%B6%D0%B8%D1%86%D1%96-%D0%BF%D0%B0%D0%BF%D1%96%D1%80",
                               reply_markup=kb.greet_kb_2)
    elif message.text == 'üíØ –¥–æ–ø–æ–º–æ–≥–∞':
        await bot.send_message(message.from_user.id, '–î–∞–≤–∞–π –¥–æ–ø–æ–º–æ–∂—É. –û–±–µ—Ä–∏ –æ–¥–∏–Ω –∑ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤',
                               reply_markup=kb.greet_kb3)
    elif message.text == '–ù—ñ' or message.text == '–Ω—ñ':
        await bot.send_message(message.from_user.id, '–®–∫–æ–¥–∞')
    elif message.text == 'üò± –©–æ —Ç–∏ —Ç–∞–∫–µ?':
        await bot.send_message(message.from_user.id,
                               '–û—Ç–∞–∫–æ—ó.\n–Ø –±–æ—Ç, —è–∫–∏–π –∫–∏–¥–∞—î —Ç–æ–±—ñ –≤–∏–∫–ª–∏–∫ –≤ ¬´–∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ñ, –ø–∞–ø—ñ—Ä¬ª, '
                               '(¬´—á—ñ-—á—ñ-–∫–æ¬ª, ¬´—Ä–∞–∑-–¥–≤–∞ —Ç—Ä–∏¬ª —á–∏ ¬´—Ü—É-—î-—Ñ–∞¬ª) —ñ —è –±—É–¥—É '
                               '–¥–æ—Å—Ç–æ–π–Ω–∏–º —Å—É–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–º, –º–æ–∂–µ—à –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ üòù.\n–¢–∞–∫–æ–∂ —è –º–æ–∂—É '
                               '–≤–∏–¥–∞–≤–∞—Ç–∏ —Ä–∞–Ω–¥–æ–º–Ω—ñ —á–∏—Å–ª–∞ –∑ 0 –¥–æ 100 –∞–±–æ –¥–æ 1000.–©–µ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ '
                               '—è–∫—â–æ –≤ —Ç–µ–±–µ –Ω–µ–º–∞—î –∫—É–±–∏–∫–∞.\n–ü–æ—Ç–µ—Å—Ç—É–π '
                               '–º–µ–Ω–µ. –ú–æ–∂–µ —è '
                               '—â–æ—Å—å –¥–æ–¥–∞–º —â–µ, —Ç–∞ —è –ø–æ–≥–∞–Ω–æ –≤—á—É—Å—è –∞–ª–µ –¥–æ–±—Ä–µ –≥—Ä–∞—é üòè', reply_markup=kb.greet_kb_2)
    elif message.text == '‚¨Ö –ù–∞–∑–∞–¥':
        await bot.send_message(message.from_user.id, '–©–æ —Ç–∏ –æ–±–µ—Ä–µ—à, –∫–µ–∫—Å–∏–∫—É?', reply_markup=kb.greet_kb1)
    elif message.text == '–ê —â–æ —Ç–∞–∫–µ —Ä–∞–Ω–¥–æ–º?':
        await bot.send_message(message.chat.id, '–û—Å—å —Ç–æ–±—ñ —Å—Ç–∞—Ç–µ–π–∫–∞ –∑ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó: '
                                                'https://uk.wikipedia.org/wiki/%D0%93%D0%B5%D0%BD%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80_%D0%BF%D1%81%D0%B5%D0%B2%D0%B4%D0%BE%D0%B2%D0%B8%D0%BF%D0%B0%D0%B4%D0%BA%D0%BE%D0%B2%D0%B8%D1%85_%D1%87%D0%B8%D1%81%D0%B5%D0%BB',
                               reply_markup=kb.greet_kb_2)
    elif message.text == '–ü—Ä–∏–≤—ñ—Ç' or message.text == '–ø—Ä–∏–≤—ñ—Ç' or message.text == '–¢–∞–∫' or message.text == \
            '—Ç–∞–∫':  # –ø—Ä–∏–±–µ—Ä–∏ –∑ –≤–µ–ª–∏–∫–æ—ó –±—É–∫–≤–∏
        await bot.send_message(message.from_user.id, '–†–∞–¥–∏–π —Ç–æ–±—ñ! –°–ø–æ–¥—ñ–≤–∞—é—Å—å –±—É—Ç–∏ —Ç–æ–±—ñ –∫–æ—Ä–∏—Å–Ω–∏–º.')
    elif message.text == '–ø—Ä–∏–≤–µ—Ç' or message.text == '–ü—Ä–∏–≤–µ—Ç' or message.text == '–ó–¥–æ—Ä–æ–≤–∞' or message.text == 'Hi' or \
            message.text == 'hi' or message.text == '–ö—É':
        await bot.send_message(message.from_user.id,
                               '–¢–∏ –≤–∂–µ –≤–∏–±–∞—á, –∞–ª–µ —è –∑–Ω–∞—é –ª–µ—à–µ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –º–æ–≤—É, —â–µ–ª–µ–ø–∞ –Ω–µ —Ç–∞–∫ —Ä–æ–∑—Ç–∞—à–æ–≤–∞–Ω–∞'
                               '—ñ —É—Å—ñ–ª—è–∫—ñ –ø–æ–¥—ñ–±–Ω—ñ —à—Ç—É–∫–∏, —Ç–æ–º—É –ø—Ä–æ—à—É –ø–∏—à–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é.')
    elif message.text == '–•–æ—Ä–æ—à–æ' or message.text == 'ok' or message.text == '–î—è–∫' or message.text == '–¥—è–∫' or \
            message.text == '–î—è–∫—É—é' or message.text == '–¥—è–∫—É—é' or message.text == '–ì–∞—Ä–∞–∑–¥' or \
            message.text == '–î–æ–±—Ä–µ' or message.text == '–≥–∞—Ä–∞–∑–¥' or \
            message.text == '–æ–∫' or message.text == '–ó–≤–∏—á–∞–π–Ω–æ' or \
            message.text == '—Ö–æ—Ä–æ—à–æ' or \
            message.text == '–û–∫':
        await bot.send_message(message.from_user.id, '–¢–æ–¥—ñ —Ç–∏—Å–Ω–∏ –Ω–∞ –≤–±—É–¥–æ–≤–∞–Ω—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É, —Ü–µ –±—É–¥–µ –∑—Ä—É—á–Ω—ñ—à–µ. üòú')
    elif message.text == '–°—É–∫–∞' or message.text == '—Å—É–∫–∞' or message.text == '—Ö—É–π' or message.text == '–•—É–π' or \
            message.text == '–ù–∏—Ö—É—è' or message.text == '–Ω–∏—Ö—É—è' or message.text == '–ë–ª—è' or message.text == '–±–ª—è' or \
            message.text == '–ü–æ—Ö—É–π' or message.text == '–ø–æ—Ö—É–π' or message.text == '–ø–∞—Ö—É—é' or message.text == \
            '–Ω–∞—Ö—É–π' or message.text == '–ò–¥–∏ –Ω–∞ —Ö—É–π' or message.text == '–∏–¥–∏ –Ω–∞—Ö—É–π' or message.text == '–∏–¥–∏ –Ω–∞ —Ö—É–π!' or \
            message.text == '–•–£–ô' or message.text == '–ø–∏–¥–æ—Ä' or message.text == '–ü–∏–¥–æ—Ä' or message.text == '–ø–∏–¥–∞—Ä–∞—Å' or \
            message.text == '–ü–∏–¥–∞—Ä–∞—Å' or message.text == '–ü–∏–∑–¥–∞' or message.text == '–ø–∏–∑–¥–∞':
        await message.delete()
        await bot.send_message(message.from_user.id, '–ë—É–≤–∞–π-–±—É–≤–∞–π,–∑–∞—Å—Ä–∞–Ω—Ü—é üêì')
    elif message.text == '–ù–µ—Ç' or message.text == '–Ω–µ—Ç' or message.text == '–Ω–µ' or message.text == '–ù–µ':
        await bot.send_message(message.from_user.id, '–¢–æ–¥—ñ –≤ –Ω–∞—Å –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∏–π–¥–µ üíî')
    elif message.text == 'üëã':
        await bot.send_message(message.from_user.id, '–•–∞–∞–∞–∞–π, —Ç–∏—Å–Ω–∏ –Ω–∞ –≤–±—É–¥–æ–≤–∞–Ω—ñ –∫–Ω–æ–ø–∫–∏, –Ω–∞–º –æ–±–æ–º —Ü–µ –±—É–¥–µ –ª–µ–≥—à–µ üòå')
    elif message.text == '–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ!' or message.text == '–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ' or message.text == '—Å–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ' or \
            message.text == '—Å–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ':
        await bot.send_message(message.from_user.id, '–ì–µ—Ä–æ—è–º –°–ª–∞–≤–∞! üá∫üá¶')
    elif message.text == '–£–∫—Ä–∞–∏–Ω–∞' or message.text == '–£–∫—Ä–∞—ó–Ω–∞':
        await bot.send_message(message.from_user.id, '–ü–æ–Ω–∞–¥ —É—Å–µ!')
    elif message.text == '–õ–æ—Ö' or message.text == '–ª–æ—Ö':
        await bot.send_message(message.from_user.id, '–í —Ç–≤–æ—î–º—É –≤—ñ–¥–¥–∑–µ—Ä–∫–∞–ª–µ–Ω–Ω—ñ!')
    else:
        if message.text == '‚¨Ö H–∞–∑–∞–¥':
            await bot.send_message(message.from_user.id, '–©–æ —Ç–∏ –æ–±–µ—Ä–µ—à, —à—É–∫–∞—á—É?', reply_markup=kb.greet_kb3)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
